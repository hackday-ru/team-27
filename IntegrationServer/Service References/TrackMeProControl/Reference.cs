//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegrationServer.TrackMeProControl {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointEntryDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointEntryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int HasStartedk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        private int Numberk__BackingFieldField;
        
        private int StartOrderk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<HasStarted>k__BackingField", IsRequired=true)]
        public int HasStartedk__BackingField {
            get {
                return this.HasStartedk__BackingFieldField;
            }
            set {
                if ((this.HasStartedk__BackingFieldField.Equals(value) != true)) {
                    this.HasStartedk__BackingFieldField = value;
                    this.RaisePropertyChanged("HasStartedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Number>k__BackingField", IsRequired=true)]
        public int Numberk__BackingField {
            get {
                return this.Numberk__BackingFieldField;
            }
            set {
                if ((this.Numberk__BackingFieldField.Equals(value) != true)) {
                    this.Numberk__BackingFieldField = value;
                    this.RaisePropertyChanged("Numberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StartOrder>k__BackingField", IsRequired=true)]
        public int StartOrderk__BackingField {
            get {
                return this.StartOrderk__BackingFieldField;
            }
            set {
                if ((this.StartOrderk__BackingFieldField.Equals(value) != true)) {
                    this.StartOrderk__BackingFieldField = value;
                    this.RaisePropertyChanged("StartOrderk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointResultDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointResultDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FinishTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> PenalitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartTicksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FinishTicks {
            get {
                return this.FinishTicksField;
            }
            set {
                if ((this.FinishTicksField.Equals(value) != true)) {
                    this.FinishTicksField = value;
                    this.RaisePropertyChanged("FinishTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> Penalities {
            get {
                return this.PenalitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PenalitiesField, value) != true)) {
                    this.PenalitiesField = value;
                    this.RaisePropertyChanged("Penalities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StageNumber {
            get {
                return this.StageNumberField;
            }
            set {
                if ((this.StageNumberField.Equals(value) != true)) {
                    this.StageNumberField = value;
                    this.RaisePropertyChanged("StageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartTicks {
            get {
                return this.StartTicksField;
            }
            set {
                if ((this.StartTicksField.Equals(value) != true)) {
                    this.StartTicksField = value;
                    this.RaisePropertyChanged("StartTicks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointRallyResultDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointRallyResultDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FinishTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StartTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TCTicksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FinishTicks {
            get {
                return this.FinishTicksField;
            }
            set {
                if ((this.FinishTicksField.Equals(value) != true)) {
                    this.FinishTicksField = value;
                    this.RaisePropertyChanged("FinishTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StageNumber {
            get {
                return this.StageNumberField;
            }
            set {
                if ((this.StageNumberField.Equals(value) != true)) {
                    this.StageNumberField = value;
                    this.RaisePropertyChanged("StageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartTicks {
            get {
                return this.StartTicksField;
            }
            set {
                if ((this.StartTicksField.Equals(value) != true)) {
                    this.StartTicksField = value;
                    this.RaisePropertyChanged("StartTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TCTicks {
            get {
                return this.TCTicksField;
            }
            set {
                if ((this.TCTicksField.Equals(value) != true)) {
                    this.TCTicksField = value;
                    this.RaisePropertyChanged("TCTicks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointSplitTimeDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointSplitTimeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> PenalitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TicksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> Penalities {
            get {
                return this.PenalitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PenalitiesField, value) != true)) {
                    this.PenalitiesField = value;
                    this.RaisePropertyChanged("Penalities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StageNumber {
            get {
                return this.StageNumberField;
            }
            set {
                if ((this.StageNumberField.Equals(value) != true)) {
                    this.StageNumberField = value;
                    this.RaisePropertyChanged("StageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetTicks {
            get {
                return this.TargetTicksField;
            }
            set {
                if ((this.TargetTicksField.Equals(value) != true)) {
                    this.TargetTicksField = value;
                    this.RaisePropertyChanged("TargetTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Ticks {
            get {
                return this.TicksField;
            }
            set {
                if ((this.TicksField.Equals(value) != true)) {
                    this.TicksField = value;
                    this.RaisePropertyChanged("Ticks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointTimeEventDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointTimeEventDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO.TimeEventType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventTime {
            get {
                return this.EventTimeField;
            }
            set {
                if ((this.EventTimeField.Equals(value) != true)) {
                    this.EventTimeField = value;
                    this.RaisePropertyChanged("EventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StageId {
            get {
                return this.StageIdField;
            }
            set {
                if ((this.StageIdField.Equals(value) != true)) {
                    this.StageIdField = value;
                    this.RaisePropertyChanged("StageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO.TimeEventType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointTimeEventDTO.TimeEventType", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
        public enum TimeEventType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Start = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Finish = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlPointMessageDTO", Namespace="http://schemas.datacontract.org/2004/07/RSP2.Competitions.EndPoints.Models")]
    [System.SerializableAttribute()]
    public partial class ControlPointMessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrackMeProControl.IControlPoint", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IControlPoint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/RegisterTimer", ReplyAction="http://tempuri.org/IControlPoint/RegisterTimerResponse")]
        void RegisterTimer(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/RegisterTimer", ReplyAction="http://tempuri.org/IControlPoint/RegisterTimerResponse")]
        System.Threading.Tasks.Task RegisterTimerAsync(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetStageEntries", ReplyAction="http://tempuri.org/IControlPoint/GetStageEntriesResponse")]
        IntegrationServer.TrackMeProControl.ControlPointEntryDTO[] GetStageEntries(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetStageEntries", ReplyAction="http://tempuri.org/IControlPoint/GetStageEntriesResponse")]
        System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointEntryDTO[]> GetStageEntriesAsync(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResults", ReplyAction="http://tempuri.org/IControlPoint/SendResultsResponse")]
        void SendResults(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResults", ReplyAction="http://tempuri.org/IControlPoint/SendResultsResponse")]
        System.Threading.Tasks.Task SendResultsAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRally", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyResponse")]
        void SendResultsRally(IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRally", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyResponse")]
        System.Threading.Tasks.Task SendResultsRallyAsync(IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetResultsRally", ReplyAction="http://tempuri.org/IControlPoint/GetResultsRallyResponse")]
        IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] GetResultsRally(int stageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetResultsRally", ReplyAction="http://tempuri.org/IControlPoint/GetResultsRallyResponse")]
        System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[]> GetResultsRallyAsync(int stageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRallyStart", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyStartResponse")]
        void SendResultsRallyStart(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRallyStart", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyStartResponse")]
        System.Threading.Tasks.Task SendResultsRallyStartAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRallyFinish", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyFinishResponse")]
        void SendResultsRallyFinish(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendResultsRallyFinish", ReplyAction="http://tempuri.org/IControlPoint/SendResultsRallyFinishResponse")]
        System.Threading.Tasks.Task SendResultsRallyFinishAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendSplitTimes", ReplyAction="http://tempuri.org/IControlPoint/SendSplitTimesResponse")]
        void SendSplitTimes(IntegrationServer.TrackMeProControl.ControlPointSplitTimeDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendSplitTimes", ReplyAction="http://tempuri.org/IControlPoint/SendSplitTimesResponse")]
        System.Threading.Tasks.Task SendSplitTimesAsync(IntegrationServer.TrackMeProControl.ControlPointSplitTimeDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendEvents", ReplyAction="http://tempuri.org/IControlPoint/SendEventsResponse")]
        void SendEvents(IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendEvents", ReplyAction="http://tempuri.org/IControlPoint/SendEventsResponse")]
        System.Threading.Tasks.Task SendEventsAsync(IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO[] results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendMessage", ReplyAction="http://tempuri.org/IControlPoint/SendMessageResponse")]
        void SendMessage(int stageId, string author, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendMessage", ReplyAction="http://tempuri.org/IControlPoint/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(int stageId, string author, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetMessages", ReplyAction="http://tempuri.org/IControlPoint/GetMessagesResponse")]
        IntegrationServer.TrackMeProControl.ControlPointMessageDTO[] GetMessages(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/GetMessages", ReplyAction="http://tempuri.org/IControlPoint/GetMessagesResponse")]
        System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointMessageDTO[]> GetMessagesAsync(int stageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendTimeControl", ReplyAction="http://tempuri.org/IControlPoint/SendTimeControlResponse")]
        void SendTimeControl(int stageNumber, string startNumber, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControlPoint/SendTimeControl", ReplyAction="http://tempuri.org/IControlPoint/SendTimeControlResponse")]
        System.Threading.Tasks.Task SendTimeControlAsync(int stageNumber, string startNumber, System.DateTime time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControlPointChannel : IntegrationServer.TrackMeProControl.IControlPoint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControlPointClient : System.ServiceModel.ClientBase<IntegrationServer.TrackMeProControl.IControlPoint>, IntegrationServer.TrackMeProControl.IControlPoint {
        
        public ControlPointClient() {
        }
        
        public ControlPointClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControlPointClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlPointClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControlPointClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterTimer(int stageId) {
            base.Channel.RegisterTimer(stageId);
        }
        
        public System.Threading.Tasks.Task RegisterTimerAsync(int stageId) {
            return base.Channel.RegisterTimerAsync(stageId);
        }
        
        public IntegrationServer.TrackMeProControl.ControlPointEntryDTO[] GetStageEntries(int stageId) {
            return base.Channel.GetStageEntries(stageId);
        }
        
        public System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointEntryDTO[]> GetStageEntriesAsync(int stageId) {
            return base.Channel.GetStageEntriesAsync(stageId);
        }
        
        public void SendResults(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            base.Channel.SendResults(results);
        }
        
        public System.Threading.Tasks.Task SendResultsAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            return base.Channel.SendResultsAsync(results);
        }
        
        public void SendResultsRally(IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] results) {
            base.Channel.SendResultsRally(results);
        }
        
        public System.Threading.Tasks.Task SendResultsRallyAsync(IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] results) {
            return base.Channel.SendResultsRallyAsync(results);
        }
        
        public IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[] GetResultsRally(int stageNumber) {
            return base.Channel.GetResultsRally(stageNumber);
        }
        
        public System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointRallyResultDTO[]> GetResultsRallyAsync(int stageNumber) {
            return base.Channel.GetResultsRallyAsync(stageNumber);
        }
        
        public void SendResultsRallyStart(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            base.Channel.SendResultsRallyStart(results);
        }
        
        public System.Threading.Tasks.Task SendResultsRallyStartAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            return base.Channel.SendResultsRallyStartAsync(results);
        }
        
        public void SendResultsRallyFinish(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            base.Channel.SendResultsRallyFinish(results);
        }
        
        public System.Threading.Tasks.Task SendResultsRallyFinishAsync(IntegrationServer.TrackMeProControl.ControlPointResultDTO[] results) {
            return base.Channel.SendResultsRallyFinishAsync(results);
        }
        
        public void SendSplitTimes(IntegrationServer.TrackMeProControl.ControlPointSplitTimeDTO[] results) {
            base.Channel.SendSplitTimes(results);
        }
        
        public System.Threading.Tasks.Task SendSplitTimesAsync(IntegrationServer.TrackMeProControl.ControlPointSplitTimeDTO[] results) {
            return base.Channel.SendSplitTimesAsync(results);
        }
        
        public void SendEvents(IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO[] results) {
            base.Channel.SendEvents(results);
        }
        
        public System.Threading.Tasks.Task SendEventsAsync(IntegrationServer.TrackMeProControl.ControlPointTimeEventDTO[] results) {
            return base.Channel.SendEventsAsync(results);
        }
        
        public void SendMessage(int stageId, string author, string message) {
            base.Channel.SendMessage(stageId, author, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(int stageId, string author, string message) {
            return base.Channel.SendMessageAsync(stageId, author, message);
        }
        
        public IntegrationServer.TrackMeProControl.ControlPointMessageDTO[] GetMessages(int stageId) {
            return base.Channel.GetMessages(stageId);
        }
        
        public System.Threading.Tasks.Task<IntegrationServer.TrackMeProControl.ControlPointMessageDTO[]> GetMessagesAsync(int stageId) {
            return base.Channel.GetMessagesAsync(stageId);
        }
        
        public void SendTimeControl(int stageNumber, string startNumber, System.DateTime time) {
            base.Channel.SendTimeControl(stageNumber, startNumber, time);
        }
        
        public System.Threading.Tasks.Task SendTimeControlAsync(int stageNumber, string startNumber, System.DateTime time) {
            return base.Channel.SendTimeControlAsync(stageNumber, startNumber, time);
        }
    }
}
